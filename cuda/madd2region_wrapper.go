package cuda

/*
 THIS FILE IS AUTO-GENERATED BY CUDA2GO.
 EDITING IS FUTILE.
*/

import (
	"github.com/mumax/3/cuda/cu"
	"github.com/mumax/3/timer"
	"sync"
	"unsafe"
)

// CUDA handle for madd2region kernel
var madd2region_code cu.Function

// Stores the arguments for madd2region kernel invocation
type madd2region_args_t struct {
	arg_dst        unsafe.Pointer
	arg_src1       unsafe.Pointer
	arg_fac1       float32
	arg_src2       unsafe.Pointer
	arg_fac2       float32
	arg_param2_    unsafe.Pointer
	arg_param2_mul float32
	arg_src3       unsafe.Pointer
	arg_fac3       float32
	arg_param3_    unsafe.Pointer
	arg_param3_mul float32
	arg_N          int
	argptr         [12]unsafe.Pointer
	sync.Mutex
}

// Stores the arguments for madd2region kernel invocation
var madd2region_args madd2region_args_t

func init() {
	// CUDA driver kernel call wants pointers to arguments, set them up once.
	madd2region_args.argptr[0] = unsafe.Pointer(&madd2region_args.arg_dst)
	madd2region_args.argptr[1] = unsafe.Pointer(&madd2region_args.arg_src1)
	madd2region_args.argptr[2] = unsafe.Pointer(&madd2region_args.arg_fac1)
	madd2region_args.argptr[3] = unsafe.Pointer(&madd2region_args.arg_src2)
	madd2region_args.argptr[4] = unsafe.Pointer(&madd2region_args.arg_fac2)
	madd2region_args.argptr[5] = unsafe.Pointer(&madd2region_args.arg_param2_)
	madd2region_args.argptr[6] = unsafe.Pointer(&madd2region_args.arg_param2_mul)
	madd2region_args.argptr[7] = unsafe.Pointer(&madd2region_args.arg_src3)
	madd2region_args.argptr[8] = unsafe.Pointer(&madd2region_args.arg_fac3)
	madd2region_args.argptr[9] = unsafe.Pointer(&madd2region_args.arg_param3_)
	madd2region_args.argptr[10] = unsafe.Pointer(&madd2region_args.arg_param3_mul)
	madd2region_args.argptr[11] = unsafe.Pointer(&madd2region_args.arg_N)
}

// Wrapper for madd2region CUDA kernel, asynchronous.
func k_madd2region_async(dst unsafe.Pointer, src1 unsafe.Pointer, fac1 float32, src2 unsafe.Pointer, fac2 float32, param2_ unsafe.Pointer, param2_mul float32, src3 unsafe.Pointer, fac3 float32, param3_ unsafe.Pointer, param3_mul float32, N int, cfg *config) {
	if Synchronous { // debug
		Sync()
		timer.Start("madd2region")
	}

	madd2region_args.Lock()
	defer madd2region_args.Unlock()

	if madd2region_code == 0 {
		madd2region_code = fatbinLoad(madd2region_map, "madd2region")
	}

	madd2region_args.arg_dst = dst
	madd2region_args.arg_src1 = src1
	madd2region_args.arg_fac1 = fac1
	madd2region_args.arg_src2 = src2
	madd2region_args.arg_fac2 = fac2
	madd2region_args.arg_param2_ = param2_
	madd2region_args.arg_param2_mul = param2_mul
	madd2region_args.arg_src3 = src3
	madd2region_args.arg_fac3 = fac3
	madd2region_args.arg_param3_ = param3_
	madd2region_args.arg_param3_mul = param3_mul
	madd2region_args.arg_N = N

	args := madd2region_args.argptr[:]
	cu.LaunchKernel(madd2region_code, cfg.Grid.X, cfg.Grid.Y, cfg.Grid.Z, cfg.Block.X, cfg.Block.Y, cfg.Block.Z, 0, stream0, args)

	if Synchronous { // debug
		Sync()
		timer.Stop("madd2region")
	}
}

// maps compute capability on PTX code for madd2region kernel.
var madd2region_map = map[int]string{0: "",
	30: madd2region_ptx_30,
	35: madd2region_ptx_35,
	37: madd2region_ptx_37,
	50: madd2region_ptx_50,
	52: madd2region_ptx_52,
	53: madd2region_ptx_53,
	60: madd2region_ptx_60,
	61: madd2region_ptx_61,
	70: madd2region_ptx_70,
	75: madd2region_ptx_75}

// madd2region PTX code for various compute capabilities.
const (
	madd2region_ptx_30 = `
.version 6.3
.target sm_30
.address_size 64

	// .globl	madd2region

.visible .entry madd2region(
	.param .u64 madd2region_param_0,
	.param .u64 madd2region_param_1,
	.param .f32 madd2region_param_2,
	.param .u64 madd2region_param_3,
	.param .f32 madd2region_param_4,
	.param .u64 madd2region_param_5,
	.param .f32 madd2region_param_6,
	.param .u64 madd2region_param_7,
	.param .f32 madd2region_param_8,
	.param .u64 madd2region_param_9,
	.param .f32 madd2region_param_10,
	.param .u32 madd2region_param_11
)
{
	.reg .pred 	%p<4>;
	.reg .f32 	%f<21>;
	.reg .b32 	%r<9>;
	.reg .b64 	%rd<20>;


	ld.param.u64 	%rd1, [madd2region_param_0];
	ld.param.u64 	%rd2, [madd2region_param_1];
	ld.param.f32 	%f7, [madd2region_param_2];
	ld.param.u64 	%rd3, [madd2region_param_3];
	ld.param.f32 	%f8, [madd2region_param_4];
	ld.param.u64 	%rd4, [madd2region_param_5];
	ld.param.f32 	%f19, [madd2region_param_6];
	ld.param.f32 	%f10, [madd2region_param_8];
	ld.param.u64 	%rd5, [madd2region_param_9];
	ld.param.f32 	%f20, [madd2region_param_10];
	ld.param.u32 	%r2, [madd2region_param_11];
	mov.u32 	%r3, %nctaid.x;
	mov.u32 	%r4, %ctaid.y;
	mov.u32 	%r5, %ctaid.x;
	mad.lo.s32 	%r6, %r3, %r4, %r5;
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r1, %r6, %r7, %r8;
	setp.ge.s32	%p1, %r1, %r2;
	@%p1 bra 	BB0_6;

	cvta.to.global.u64 	%rd6, %rd2;
	mul.wide.s32 	%rd7, %r1, 4;
	add.s64 	%rd8, %rd6, %rd7;
	ld.global.f32 	%f1, [%rd8];
	setp.eq.s64	%p2, %rd4, 0;
	@%p2 bra 	BB0_3;

	cvta.to.global.u64 	%rd9, %rd4;
	add.s64 	%rd11, %rd9, %rd7;
	ld.global.f32 	%f12, [%rd11];
	mul.f32 	%f19, %f12, %f19;

BB0_3:
	mul.f32 	%f13, %f19, %f8;
	mul.f32 	%f14, %f13, %f1;
	fma.rn.f32 	%f4, %f1, %f7, %f14;
	setp.eq.s64	%p3, %rd5, 0;
	@%p3 bra 	BB0_5;

	cvta.to.global.u64 	%rd12, %rd5;
	add.s64 	%rd14, %rd12, %rd7;
	ld.global.f32 	%f15, [%rd14];
	mul.f32 	%f20, %f15, %f20;

BB0_5:
	cvta.to.global.u64 	%rd15, %rd1;
	cvta.to.global.u64 	%rd16, %rd3;
	add.s64 	%rd18, %rd16, %rd7;
	ld.global.f32 	%f16, [%rd18];
	mul.f32 	%f17, %f20, %f10;
	fma.rn.f32 	%f18, %f17, %f16, %f4;
	add.s64 	%rd19, %rd15, %rd7;
	st.global.f32 	[%rd19], %f18;

BB0_6:
	ret;
}


`
	madd2region_ptx_35 = `
.version 6.3
.target sm_35
.address_size 64

	// .globl	madd2region

.visible .entry madd2region(
	.param .u64 madd2region_param_0,
	.param .u64 madd2region_param_1,
	.param .f32 madd2region_param_2,
	.param .u64 madd2region_param_3,
	.param .f32 madd2region_param_4,
	.param .u64 madd2region_param_5,
	.param .f32 madd2region_param_6,
	.param .u64 madd2region_param_7,
	.param .f32 madd2region_param_8,
	.param .u64 madd2region_param_9,
	.param .f32 madd2region_param_10,
	.param .u32 madd2region_param_11
)
{
	.reg .pred 	%p<4>;
	.reg .f32 	%f<21>;
	.reg .b32 	%r<9>;
	.reg .b64 	%rd<20>;


	ld.param.u64 	%rd1, [madd2region_param_0];
	ld.param.u64 	%rd2, [madd2region_param_1];
	ld.param.f32 	%f7, [madd2region_param_2];
	ld.param.u64 	%rd3, [madd2region_param_3];
	ld.param.f32 	%f8, [madd2region_param_4];
	ld.param.u64 	%rd4, [madd2region_param_5];
	ld.param.f32 	%f19, [madd2region_param_6];
	ld.param.f32 	%f10, [madd2region_param_8];
	ld.param.u64 	%rd5, [madd2region_param_9];
	ld.param.f32 	%f20, [madd2region_param_10];
	ld.param.u32 	%r2, [madd2region_param_11];
	mov.u32 	%r3, %nctaid.x;
	mov.u32 	%r4, %ctaid.y;
	mov.u32 	%r5, %ctaid.x;
	mad.lo.s32 	%r6, %r3, %r4, %r5;
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r1, %r6, %r7, %r8;
	setp.ge.s32	%p1, %r1, %r2;
	@%p1 bra 	BB0_6;

	cvta.to.global.u64 	%rd6, %rd2;
	mul.wide.s32 	%rd7, %r1, 4;
	add.s64 	%rd8, %rd6, %rd7;
	ld.global.nc.f32 	%f1, [%rd8];
	setp.eq.s64	%p2, %rd4, 0;
	@%p2 bra 	BB0_3;

	cvta.to.global.u64 	%rd9, %rd4;
	add.s64 	%rd11, %rd9, %rd7;
	ld.global.nc.f32 	%f12, [%rd11];
	mul.f32 	%f19, %f12, %f19;

BB0_3:
	mul.f32 	%f13, %f19, %f8;
	mul.f32 	%f14, %f13, %f1;
	fma.rn.f32 	%f4, %f1, %f7, %f14;
	setp.eq.s64	%p3, %rd5, 0;
	@%p3 bra 	BB0_5;

	cvta.to.global.u64 	%rd12, %rd5;
	add.s64 	%rd14, %rd12, %rd7;
	ld.global.nc.f32 	%f15, [%rd14];
	mul.f32 	%f20, %f15, %f20;

BB0_5:
	cvta.to.global.u64 	%rd15, %rd1;
	cvta.to.global.u64 	%rd16, %rd3;
	add.s64 	%rd18, %rd16, %rd7;
	ld.global.nc.f32 	%f16, [%rd18];
	mul.f32 	%f17, %f20, %f10;
	fma.rn.f32 	%f18, %f17, %f16, %f4;
	add.s64 	%rd19, %rd15, %rd7;
	st.global.f32 	[%rd19], %f18;

BB0_6:
	ret;
}


`
	madd2region_ptx_37 = `
.version 6.3
.target sm_37
.address_size 64

	// .globl	madd2region

.visible .entry madd2region(
	.param .u64 madd2region_param_0,
	.param .u64 madd2region_param_1,
	.param .f32 madd2region_param_2,
	.param .u64 madd2region_param_3,
	.param .f32 madd2region_param_4,
	.param .u64 madd2region_param_5,
	.param .f32 madd2region_param_6,
	.param .u64 madd2region_param_7,
	.param .f32 madd2region_param_8,
	.param .u64 madd2region_param_9,
	.param .f32 madd2region_param_10,
	.param .u32 madd2region_param_11
)
{
	.reg .pred 	%p<4>;
	.reg .f32 	%f<21>;
	.reg .b32 	%r<9>;
	.reg .b64 	%rd<20>;


	ld.param.u64 	%rd1, [madd2region_param_0];
	ld.param.u64 	%rd2, [madd2region_param_1];
	ld.param.f32 	%f7, [madd2region_param_2];
	ld.param.u64 	%rd3, [madd2region_param_3];
	ld.param.f32 	%f8, [madd2region_param_4];
	ld.param.u64 	%rd4, [madd2region_param_5];
	ld.param.f32 	%f19, [madd2region_param_6];
	ld.param.f32 	%f10, [madd2region_param_8];
	ld.param.u64 	%rd5, [madd2region_param_9];
	ld.param.f32 	%f20, [madd2region_param_10];
	ld.param.u32 	%r2, [madd2region_param_11];
	mov.u32 	%r3, %nctaid.x;
	mov.u32 	%r4, %ctaid.y;
	mov.u32 	%r5, %ctaid.x;
	mad.lo.s32 	%r6, %r3, %r4, %r5;
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r1, %r6, %r7, %r8;
	setp.ge.s32	%p1, %r1, %r2;
	@%p1 bra 	BB0_6;

	cvta.to.global.u64 	%rd6, %rd2;
	mul.wide.s32 	%rd7, %r1, 4;
	add.s64 	%rd8, %rd6, %rd7;
	ld.global.nc.f32 	%f1, [%rd8];
	setp.eq.s64	%p2, %rd4, 0;
	@%p2 bra 	BB0_3;

	cvta.to.global.u64 	%rd9, %rd4;
	add.s64 	%rd11, %rd9, %rd7;
	ld.global.nc.f32 	%f12, [%rd11];
	mul.f32 	%f19, %f12, %f19;

BB0_3:
	mul.f32 	%f13, %f19, %f8;
	mul.f32 	%f14, %f13, %f1;
	fma.rn.f32 	%f4, %f1, %f7, %f14;
	setp.eq.s64	%p3, %rd5, 0;
	@%p3 bra 	BB0_5;

	cvta.to.global.u64 	%rd12, %rd5;
	add.s64 	%rd14, %rd12, %rd7;
	ld.global.nc.f32 	%f15, [%rd14];
	mul.f32 	%f20, %f15, %f20;

BB0_5:
	cvta.to.global.u64 	%rd15, %rd1;
	cvta.to.global.u64 	%rd16, %rd3;
	add.s64 	%rd18, %rd16, %rd7;
	ld.global.nc.f32 	%f16, [%rd18];
	mul.f32 	%f17, %f20, %f10;
	fma.rn.f32 	%f18, %f17, %f16, %f4;
	add.s64 	%rd19, %rd15, %rd7;
	st.global.f32 	[%rd19], %f18;

BB0_6:
	ret;
}


`
	madd2region_ptx_50 = `
.version 6.3
.target sm_50
.address_size 64

	// .globl	madd2region

.visible .entry madd2region(
	.param .u64 madd2region_param_0,
	.param .u64 madd2region_param_1,
	.param .f32 madd2region_param_2,
	.param .u64 madd2region_param_3,
	.param .f32 madd2region_param_4,
	.param .u64 madd2region_param_5,
	.param .f32 madd2region_param_6,
	.param .u64 madd2region_param_7,
	.param .f32 madd2region_param_8,
	.param .u64 madd2region_param_9,
	.param .f32 madd2region_param_10,
	.param .u32 madd2region_param_11
)
{
	.reg .pred 	%p<4>;
	.reg .f32 	%f<21>;
	.reg .b32 	%r<9>;
	.reg .b64 	%rd<20>;


	ld.param.u64 	%rd1, [madd2region_param_0];
	ld.param.u64 	%rd2, [madd2region_param_1];
	ld.param.f32 	%f7, [madd2region_param_2];
	ld.param.u64 	%rd3, [madd2region_param_3];
	ld.param.f32 	%f8, [madd2region_param_4];
	ld.param.u64 	%rd4, [madd2region_param_5];
	ld.param.f32 	%f19, [madd2region_param_6];
	ld.param.f32 	%f10, [madd2region_param_8];
	ld.param.u64 	%rd5, [madd2region_param_9];
	ld.param.f32 	%f20, [madd2region_param_10];
	ld.param.u32 	%r2, [madd2region_param_11];
	mov.u32 	%r3, %nctaid.x;
	mov.u32 	%r4, %ctaid.y;
	mov.u32 	%r5, %ctaid.x;
	mad.lo.s32 	%r6, %r3, %r4, %r5;
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r1, %r6, %r7, %r8;
	setp.ge.s32	%p1, %r1, %r2;
	@%p1 bra 	BB0_6;

	cvta.to.global.u64 	%rd6, %rd2;
	mul.wide.s32 	%rd7, %r1, 4;
	add.s64 	%rd8, %rd6, %rd7;
	ld.global.nc.f32 	%f1, [%rd8];
	setp.eq.s64	%p2, %rd4, 0;
	@%p2 bra 	BB0_3;

	cvta.to.global.u64 	%rd9, %rd4;
	add.s64 	%rd11, %rd9, %rd7;
	ld.global.nc.f32 	%f12, [%rd11];
	mul.f32 	%f19, %f12, %f19;

BB0_3:
	mul.f32 	%f13, %f19, %f8;
	mul.f32 	%f14, %f13, %f1;
	fma.rn.f32 	%f4, %f1, %f7, %f14;
	setp.eq.s64	%p3, %rd5, 0;
	@%p3 bra 	BB0_5;

	cvta.to.global.u64 	%rd12, %rd5;
	add.s64 	%rd14, %rd12, %rd7;
	ld.global.nc.f32 	%f15, [%rd14];
	mul.f32 	%f20, %f15, %f20;

BB0_5:
	cvta.to.global.u64 	%rd15, %rd1;
	cvta.to.global.u64 	%rd16, %rd3;
	add.s64 	%rd18, %rd16, %rd7;
	ld.global.nc.f32 	%f16, [%rd18];
	mul.f32 	%f17, %f20, %f10;
	fma.rn.f32 	%f18, %f17, %f16, %f4;
	add.s64 	%rd19, %rd15, %rd7;
	st.global.f32 	[%rd19], %f18;

BB0_6:
	ret;
}


`
	madd2region_ptx_52 = `
.version 6.3
.target sm_52
.address_size 64

	// .globl	madd2region

.visible .entry madd2region(
	.param .u64 madd2region_param_0,
	.param .u64 madd2region_param_1,
	.param .f32 madd2region_param_2,
	.param .u64 madd2region_param_3,
	.param .f32 madd2region_param_4,
	.param .u64 madd2region_param_5,
	.param .f32 madd2region_param_6,
	.param .u64 madd2region_param_7,
	.param .f32 madd2region_param_8,
	.param .u64 madd2region_param_9,
	.param .f32 madd2region_param_10,
	.param .u32 madd2region_param_11
)
{
	.reg .pred 	%p<4>;
	.reg .f32 	%f<21>;
	.reg .b32 	%r<9>;
	.reg .b64 	%rd<20>;


	ld.param.u64 	%rd1, [madd2region_param_0];
	ld.param.u64 	%rd2, [madd2region_param_1];
	ld.param.f32 	%f7, [madd2region_param_2];
	ld.param.u64 	%rd3, [madd2region_param_3];
	ld.param.f32 	%f8, [madd2region_param_4];
	ld.param.u64 	%rd4, [madd2region_param_5];
	ld.param.f32 	%f19, [madd2region_param_6];
	ld.param.f32 	%f10, [madd2region_param_8];
	ld.param.u64 	%rd5, [madd2region_param_9];
	ld.param.f32 	%f20, [madd2region_param_10];
	ld.param.u32 	%r2, [madd2region_param_11];
	mov.u32 	%r3, %nctaid.x;
	mov.u32 	%r4, %ctaid.y;
	mov.u32 	%r5, %ctaid.x;
	mad.lo.s32 	%r6, %r3, %r4, %r5;
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r1, %r6, %r7, %r8;
	setp.ge.s32	%p1, %r1, %r2;
	@%p1 bra 	BB0_6;

	cvta.to.global.u64 	%rd6, %rd2;
	mul.wide.s32 	%rd7, %r1, 4;
	add.s64 	%rd8, %rd6, %rd7;
	ld.global.nc.f32 	%f1, [%rd8];
	setp.eq.s64	%p2, %rd4, 0;
	@%p2 bra 	BB0_3;

	cvta.to.global.u64 	%rd9, %rd4;
	add.s64 	%rd11, %rd9, %rd7;
	ld.global.nc.f32 	%f12, [%rd11];
	mul.f32 	%f19, %f12, %f19;

BB0_3:
	mul.f32 	%f13, %f19, %f8;
	mul.f32 	%f14, %f13, %f1;
	fma.rn.f32 	%f4, %f1, %f7, %f14;
	setp.eq.s64	%p3, %rd5, 0;
	@%p3 bra 	BB0_5;

	cvta.to.global.u64 	%rd12, %rd5;
	add.s64 	%rd14, %rd12, %rd7;
	ld.global.nc.f32 	%f15, [%rd14];
	mul.f32 	%f20, %f15, %f20;

BB0_5:
	cvta.to.global.u64 	%rd15, %rd1;
	cvta.to.global.u64 	%rd16, %rd3;
	add.s64 	%rd18, %rd16, %rd7;
	ld.global.nc.f32 	%f16, [%rd18];
	mul.f32 	%f17, %f20, %f10;
	fma.rn.f32 	%f18, %f17, %f16, %f4;
	add.s64 	%rd19, %rd15, %rd7;
	st.global.f32 	[%rd19], %f18;

BB0_6:
	ret;
}


`
	madd2region_ptx_53 = `
.version 6.3
.target sm_53
.address_size 64

	// .globl	madd2region

.visible .entry madd2region(
	.param .u64 madd2region_param_0,
	.param .u64 madd2region_param_1,
	.param .f32 madd2region_param_2,
	.param .u64 madd2region_param_3,
	.param .f32 madd2region_param_4,
	.param .u64 madd2region_param_5,
	.param .f32 madd2region_param_6,
	.param .u64 madd2region_param_7,
	.param .f32 madd2region_param_8,
	.param .u64 madd2region_param_9,
	.param .f32 madd2region_param_10,
	.param .u32 madd2region_param_11
)
{
	.reg .pred 	%p<4>;
	.reg .f32 	%f<21>;
	.reg .b32 	%r<9>;
	.reg .b64 	%rd<20>;


	ld.param.u64 	%rd1, [madd2region_param_0];
	ld.param.u64 	%rd2, [madd2region_param_1];
	ld.param.f32 	%f7, [madd2region_param_2];
	ld.param.u64 	%rd3, [madd2region_param_3];
	ld.param.f32 	%f8, [madd2region_param_4];
	ld.param.u64 	%rd4, [madd2region_param_5];
	ld.param.f32 	%f19, [madd2region_param_6];
	ld.param.f32 	%f10, [madd2region_param_8];
	ld.param.u64 	%rd5, [madd2region_param_9];
	ld.param.f32 	%f20, [madd2region_param_10];
	ld.param.u32 	%r2, [madd2region_param_11];
	mov.u32 	%r3, %nctaid.x;
	mov.u32 	%r4, %ctaid.y;
	mov.u32 	%r5, %ctaid.x;
	mad.lo.s32 	%r6, %r3, %r4, %r5;
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r1, %r6, %r7, %r8;
	setp.ge.s32	%p1, %r1, %r2;
	@%p1 bra 	BB0_6;

	cvta.to.global.u64 	%rd6, %rd2;
	mul.wide.s32 	%rd7, %r1, 4;
	add.s64 	%rd8, %rd6, %rd7;
	ld.global.nc.f32 	%f1, [%rd8];
	setp.eq.s64	%p2, %rd4, 0;
	@%p2 bra 	BB0_3;

	cvta.to.global.u64 	%rd9, %rd4;
	add.s64 	%rd11, %rd9, %rd7;
	ld.global.nc.f32 	%f12, [%rd11];
	mul.f32 	%f19, %f12, %f19;

BB0_3:
	mul.f32 	%f13, %f19, %f8;
	mul.f32 	%f14, %f13, %f1;
	fma.rn.f32 	%f4, %f1, %f7, %f14;
	setp.eq.s64	%p3, %rd5, 0;
	@%p3 bra 	BB0_5;

	cvta.to.global.u64 	%rd12, %rd5;
	add.s64 	%rd14, %rd12, %rd7;
	ld.global.nc.f32 	%f15, [%rd14];
	mul.f32 	%f20, %f15, %f20;

BB0_5:
	cvta.to.global.u64 	%rd15, %rd1;
	cvta.to.global.u64 	%rd16, %rd3;
	add.s64 	%rd18, %rd16, %rd7;
	ld.global.nc.f32 	%f16, [%rd18];
	mul.f32 	%f17, %f20, %f10;
	fma.rn.f32 	%f18, %f17, %f16, %f4;
	add.s64 	%rd19, %rd15, %rd7;
	st.global.f32 	[%rd19], %f18;

BB0_6:
	ret;
}


`
	madd2region_ptx_60 = `
.version 6.3
.target sm_60
.address_size 64

	// .globl	madd2region

.visible .entry madd2region(
	.param .u64 madd2region_param_0,
	.param .u64 madd2region_param_1,
	.param .f32 madd2region_param_2,
	.param .u64 madd2region_param_3,
	.param .f32 madd2region_param_4,
	.param .u64 madd2region_param_5,
	.param .f32 madd2region_param_6,
	.param .u64 madd2region_param_7,
	.param .f32 madd2region_param_8,
	.param .u64 madd2region_param_9,
	.param .f32 madd2region_param_10,
	.param .u32 madd2region_param_11
)
{
	.reg .pred 	%p<4>;
	.reg .f32 	%f<21>;
	.reg .b32 	%r<9>;
	.reg .b64 	%rd<20>;


	ld.param.u64 	%rd1, [madd2region_param_0];
	ld.param.u64 	%rd2, [madd2region_param_1];
	ld.param.f32 	%f7, [madd2region_param_2];
	ld.param.u64 	%rd3, [madd2region_param_3];
	ld.param.f32 	%f8, [madd2region_param_4];
	ld.param.u64 	%rd4, [madd2region_param_5];
	ld.param.f32 	%f19, [madd2region_param_6];
	ld.param.f32 	%f10, [madd2region_param_8];
	ld.param.u64 	%rd5, [madd2region_param_9];
	ld.param.f32 	%f20, [madd2region_param_10];
	ld.param.u32 	%r2, [madd2region_param_11];
	mov.u32 	%r3, %nctaid.x;
	mov.u32 	%r4, %ctaid.y;
	mov.u32 	%r5, %ctaid.x;
	mad.lo.s32 	%r6, %r3, %r4, %r5;
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r1, %r6, %r7, %r8;
	setp.ge.s32	%p1, %r1, %r2;
	@%p1 bra 	BB0_6;

	cvta.to.global.u64 	%rd6, %rd2;
	mul.wide.s32 	%rd7, %r1, 4;
	add.s64 	%rd8, %rd6, %rd7;
	ld.global.nc.f32 	%f1, [%rd8];
	setp.eq.s64	%p2, %rd4, 0;
	@%p2 bra 	BB0_3;

	cvta.to.global.u64 	%rd9, %rd4;
	add.s64 	%rd11, %rd9, %rd7;
	ld.global.nc.f32 	%f12, [%rd11];
	mul.f32 	%f19, %f12, %f19;

BB0_3:
	mul.f32 	%f13, %f19, %f8;
	mul.f32 	%f14, %f13, %f1;
	fma.rn.f32 	%f4, %f1, %f7, %f14;
	setp.eq.s64	%p3, %rd5, 0;
	@%p3 bra 	BB0_5;

	cvta.to.global.u64 	%rd12, %rd5;
	add.s64 	%rd14, %rd12, %rd7;
	ld.global.nc.f32 	%f15, [%rd14];
	mul.f32 	%f20, %f15, %f20;

BB0_5:
	cvta.to.global.u64 	%rd15, %rd1;
	cvta.to.global.u64 	%rd16, %rd3;
	add.s64 	%rd18, %rd16, %rd7;
	ld.global.nc.f32 	%f16, [%rd18];
	mul.f32 	%f17, %f20, %f10;
	fma.rn.f32 	%f18, %f17, %f16, %f4;
	add.s64 	%rd19, %rd15, %rd7;
	st.global.f32 	[%rd19], %f18;

BB0_6:
	ret;
}


`
	madd2region_ptx_61 = `
.version 6.3
.target sm_61
.address_size 64

	// .globl	madd2region

.visible .entry madd2region(
	.param .u64 madd2region_param_0,
	.param .u64 madd2region_param_1,
	.param .f32 madd2region_param_2,
	.param .u64 madd2region_param_3,
	.param .f32 madd2region_param_4,
	.param .u64 madd2region_param_5,
	.param .f32 madd2region_param_6,
	.param .u64 madd2region_param_7,
	.param .f32 madd2region_param_8,
	.param .u64 madd2region_param_9,
	.param .f32 madd2region_param_10,
	.param .u32 madd2region_param_11
)
{
	.reg .pred 	%p<4>;
	.reg .f32 	%f<21>;
	.reg .b32 	%r<9>;
	.reg .b64 	%rd<20>;


	ld.param.u64 	%rd1, [madd2region_param_0];
	ld.param.u64 	%rd2, [madd2region_param_1];
	ld.param.f32 	%f7, [madd2region_param_2];
	ld.param.u64 	%rd3, [madd2region_param_3];
	ld.param.f32 	%f8, [madd2region_param_4];
	ld.param.u64 	%rd4, [madd2region_param_5];
	ld.param.f32 	%f19, [madd2region_param_6];
	ld.param.f32 	%f10, [madd2region_param_8];
	ld.param.u64 	%rd5, [madd2region_param_9];
	ld.param.f32 	%f20, [madd2region_param_10];
	ld.param.u32 	%r2, [madd2region_param_11];
	mov.u32 	%r3, %nctaid.x;
	mov.u32 	%r4, %ctaid.y;
	mov.u32 	%r5, %ctaid.x;
	mad.lo.s32 	%r6, %r3, %r4, %r5;
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r1, %r6, %r7, %r8;
	setp.ge.s32	%p1, %r1, %r2;
	@%p1 bra 	BB0_6;

	cvta.to.global.u64 	%rd6, %rd2;
	mul.wide.s32 	%rd7, %r1, 4;
	add.s64 	%rd8, %rd6, %rd7;
	ld.global.nc.f32 	%f1, [%rd8];
	setp.eq.s64	%p2, %rd4, 0;
	@%p2 bra 	BB0_3;

	cvta.to.global.u64 	%rd9, %rd4;
	add.s64 	%rd11, %rd9, %rd7;
	ld.global.nc.f32 	%f12, [%rd11];
	mul.f32 	%f19, %f12, %f19;

BB0_3:
	mul.f32 	%f13, %f19, %f8;
	mul.f32 	%f14, %f13, %f1;
	fma.rn.f32 	%f4, %f1, %f7, %f14;
	setp.eq.s64	%p3, %rd5, 0;
	@%p3 bra 	BB0_5;

	cvta.to.global.u64 	%rd12, %rd5;
	add.s64 	%rd14, %rd12, %rd7;
	ld.global.nc.f32 	%f15, [%rd14];
	mul.f32 	%f20, %f15, %f20;

BB0_5:
	cvta.to.global.u64 	%rd15, %rd1;
	cvta.to.global.u64 	%rd16, %rd3;
	add.s64 	%rd18, %rd16, %rd7;
	ld.global.nc.f32 	%f16, [%rd18];
	mul.f32 	%f17, %f20, %f10;
	fma.rn.f32 	%f18, %f17, %f16, %f4;
	add.s64 	%rd19, %rd15, %rd7;
	st.global.f32 	[%rd19], %f18;

BB0_6:
	ret;
}


`
	madd2region_ptx_70 = `
.version 6.3
.target sm_70
.address_size 64

	// .globl	madd2region

.visible .entry madd2region(
	.param .u64 madd2region_param_0,
	.param .u64 madd2region_param_1,
	.param .f32 madd2region_param_2,
	.param .u64 madd2region_param_3,
	.param .f32 madd2region_param_4,
	.param .u64 madd2region_param_5,
	.param .f32 madd2region_param_6,
	.param .u64 madd2region_param_7,
	.param .f32 madd2region_param_8,
	.param .u64 madd2region_param_9,
	.param .f32 madd2region_param_10,
	.param .u32 madd2region_param_11
)
{
	.reg .pred 	%p<4>;
	.reg .f32 	%f<21>;
	.reg .b32 	%r<9>;
	.reg .b64 	%rd<20>;


	ld.param.u64 	%rd1, [madd2region_param_0];
	ld.param.u64 	%rd2, [madd2region_param_1];
	ld.param.f32 	%f7, [madd2region_param_2];
	ld.param.u64 	%rd3, [madd2region_param_3];
	ld.param.f32 	%f8, [madd2region_param_4];
	ld.param.u64 	%rd4, [madd2region_param_5];
	ld.param.f32 	%f19, [madd2region_param_6];
	ld.param.f32 	%f10, [madd2region_param_8];
	ld.param.u64 	%rd5, [madd2region_param_9];
	ld.param.f32 	%f20, [madd2region_param_10];
	ld.param.u32 	%r2, [madd2region_param_11];
	mov.u32 	%r3, %nctaid.x;
	mov.u32 	%r4, %ctaid.y;
	mov.u32 	%r5, %ctaid.x;
	mad.lo.s32 	%r6, %r3, %r4, %r5;
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r1, %r6, %r7, %r8;
	setp.ge.s32	%p1, %r1, %r2;
	@%p1 bra 	BB0_6;

	cvta.to.global.u64 	%rd6, %rd2;
	mul.wide.s32 	%rd7, %r1, 4;
	add.s64 	%rd8, %rd6, %rd7;
	ld.global.nc.f32 	%f1, [%rd8];
	setp.eq.s64	%p2, %rd4, 0;
	@%p2 bra 	BB0_3;

	cvta.to.global.u64 	%rd9, %rd4;
	add.s64 	%rd11, %rd9, %rd7;
	ld.global.nc.f32 	%f12, [%rd11];
	mul.f32 	%f19, %f12, %f19;

BB0_3:
	mul.f32 	%f13, %f19, %f8;
	mul.f32 	%f14, %f13, %f1;
	fma.rn.f32 	%f4, %f1, %f7, %f14;
	setp.eq.s64	%p3, %rd5, 0;
	@%p3 bra 	BB0_5;

	cvta.to.global.u64 	%rd12, %rd5;
	add.s64 	%rd14, %rd12, %rd7;
	ld.global.nc.f32 	%f15, [%rd14];
	mul.f32 	%f20, %f15, %f20;

BB0_5:
	cvta.to.global.u64 	%rd15, %rd1;
	cvta.to.global.u64 	%rd16, %rd3;
	add.s64 	%rd18, %rd16, %rd7;
	ld.global.nc.f32 	%f16, [%rd18];
	mul.f32 	%f17, %f20, %f10;
	fma.rn.f32 	%f18, %f17, %f16, %f4;
	add.s64 	%rd19, %rd15, %rd7;
	st.global.f32 	[%rd19], %f18;

BB0_6:
	ret;
}


`
	madd2region_ptx_75 = `
.version 6.3
.target sm_75
.address_size 64

	// .globl	madd2region

.visible .entry madd2region(
	.param .u64 madd2region_param_0,
	.param .u64 madd2region_param_1,
	.param .f32 madd2region_param_2,
	.param .u64 madd2region_param_3,
	.param .f32 madd2region_param_4,
	.param .u64 madd2region_param_5,
	.param .f32 madd2region_param_6,
	.param .u64 madd2region_param_7,
	.param .f32 madd2region_param_8,
	.param .u64 madd2region_param_9,
	.param .f32 madd2region_param_10,
	.param .u32 madd2region_param_11
)
{
	.reg .pred 	%p<4>;
	.reg .f32 	%f<21>;
	.reg .b32 	%r<9>;
	.reg .b64 	%rd<20>;


	ld.param.u64 	%rd1, [madd2region_param_0];
	ld.param.u64 	%rd2, [madd2region_param_1];
	ld.param.f32 	%f7, [madd2region_param_2];
	ld.param.u64 	%rd3, [madd2region_param_3];
	ld.param.f32 	%f8, [madd2region_param_4];
	ld.param.u64 	%rd4, [madd2region_param_5];
	ld.param.f32 	%f19, [madd2region_param_6];
	ld.param.f32 	%f10, [madd2region_param_8];
	ld.param.u64 	%rd5, [madd2region_param_9];
	ld.param.f32 	%f20, [madd2region_param_10];
	ld.param.u32 	%r2, [madd2region_param_11];
	mov.u32 	%r3, %nctaid.x;
	mov.u32 	%r4, %ctaid.y;
	mov.u32 	%r5, %ctaid.x;
	mad.lo.s32 	%r6, %r3, %r4, %r5;
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r1, %r6, %r7, %r8;
	setp.ge.s32	%p1, %r1, %r2;
	@%p1 bra 	BB0_6;

	cvta.to.global.u64 	%rd6, %rd2;
	mul.wide.s32 	%rd7, %r1, 4;
	add.s64 	%rd8, %rd6, %rd7;
	ld.global.nc.f32 	%f1, [%rd8];
	setp.eq.s64	%p2, %rd4, 0;
	@%p2 bra 	BB0_3;

	cvta.to.global.u64 	%rd9, %rd4;
	add.s64 	%rd11, %rd9, %rd7;
	ld.global.nc.f32 	%f12, [%rd11];
	mul.f32 	%f19, %f12, %f19;

BB0_3:
	mul.f32 	%f13, %f19, %f8;
	mul.f32 	%f14, %f13, %f1;
	fma.rn.f32 	%f4, %f1, %f7, %f14;
	setp.eq.s64	%p3, %rd5, 0;
	@%p3 bra 	BB0_5;

	cvta.to.global.u64 	%rd12, %rd5;
	add.s64 	%rd14, %rd12, %rd7;
	ld.global.nc.f32 	%f15, [%rd14];
	mul.f32 	%f20, %f15, %f20;

BB0_5:
	cvta.to.global.u64 	%rd15, %rd1;
	cvta.to.global.u64 	%rd16, %rd3;
	add.s64 	%rd18, %rd16, %rd7;
	ld.global.nc.f32 	%f16, [%rd18];
	mul.f32 	%f17, %f20, %f10;
	fma.rn.f32 	%f18, %f17, %f16, %f4;
	add.s64 	%rd19, %rd15, %rd7;
	st.global.f32 	[%rd19], %f18;

BB0_6:
	ret;
}


`
)
